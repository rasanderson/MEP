% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MEP.R
\name{ordi_identify}
\alias{ordi_identify}
\title{Interactive identify an ordination plot}
\usage{
ordi_identify(plotname, size = 3, ...)
}
\arguments{
\item{plotname}{Name of a plot created with \code{\link{ordi_plot}}}

\item{size}{Font size of labels (default = 3)}

\item{...}{Other optional parameters}
}
\value{
The original ordiname is modified with labels
}
\description{
Interactive identify a species (attributes) and sites (samples) plot
}
\details{
This function is designed to be run interactively. First create a standard
ordination using \code{\link{ordi_pca}}, \code{\link{ordi_rda}},
\code{\link{ordi_ca}}, \code{\link{ordi_cca}} or \code{\link{ordi_nmds}}.
Then call \code{\link{ordi_plot}} but make sure that the plot results is
stored in an R object. Then apply this function to that object, and hit the
\emph{Esc} key to exit function.
\strong{Note:} In RStudio only the most recently displayed plot can be
labelled with this function, so avoid using the back arrow keys in the RStudio
plot window. Labelling may not always occur on first click, and is more
difficult on constrained ordination plots.
}
\examples{
\dontrun{
if(interactive()){

# Unconstrained ordination
require(ggrepel)
require(ggformula)
require(vegan)

data(dune)
data(dune.env)
dune_pca <- ordi_pca(dune)
dune_plt <- ordi_plot(dune_pca, layers="species", geom="point") # defaults to sites and species
dune_plt  # Display the plot
ordi_identify(dune_plt) # Hit Esc key to exit

# Constrained ordination
dune_rda <- ordi_rda(dune ~ A1 + Management, data=dune.env)
# displays spp and constraints.
# Constraints are "biplot" for continuous and "centroids" for categorical
dune_plt <- ordi_plot(dune_rda, layers=c("species", "biplot", "centroids"), geom="point")
dune_plt  # Display the plot
ordi_identify(dune_plt) # Hit Esc key to exit

}
}
}
\author{
Roy Sanderson, School of Natural & Environmental Science, Newcastle
University roy.sanderson@newcastle.ac.uk
}
